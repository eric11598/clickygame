{"version":3,"sources":["components/CharacterCard/CharacterCard.js","components/Wrapper/Wrapper.js","components/Title/Title.js","App.js","index.js"],"names":["CharacterCard","props","react_default","a","createElement","className","onClick","selectCharacter","id","alt","name","src","image","Wrapper","children","Title","message","score","highScore","App","state","characters","clickedArray","newCharacters","i","index","Math","floor","random","includes","push","newScore","_this","newHighScore","newMessage","length","newOrder","map","x","setState","_this2","this","components_Wrapper_Wrapper","components_Title_Title","friend","components_CharacterCard_CharacterCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"8yDAWeA,SARO,SAAAC,GAAK,OACzBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAML,EAAMM,gBAAgBN,EAAMO,MAC/DN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,YCDxBC,SAFC,SAAAZ,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,YCQ1CC,SARD,SAAAd,GAAK,OACnBC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMa,SAC7BZ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWJ,EAAMe,SAC9Bd,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,UAAiCJ,EAAMgB,MAAvC,kBAA6DhB,EAAMiB,qBCgFpDC,oNA7EbC,MAAQ,CACNC,aACAL,QAAS,GACTC,MAAO,EACPC,UAAW,EACXI,aAAc,MAGhBf,gBAAkB,SAAAC,GAKhB,IADA,IAAIe,EAAgB,GACXC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAG3B,IAFA,IAAIC,EAAQC,KAAKC,MAAsB,GAAhBD,KAAKE,UAErBL,EAAcM,SAASJ,IAC5BA,EAAQC,KAAKC,MAAsB,GAAhBD,KAAKE,UAE1BL,EAAcO,KAAKL,GAGvB,IAAIM,EAAWC,EAAKZ,MAAMH,MACtBgB,EAAeD,EAAKZ,MAAMF,UAC1BgB,EAAaF,EAAKZ,MAAMJ,QAEzBgB,EAAKZ,MAAME,aAAaO,SAASrB,IAE9BuB,EAASE,IACXA,EAAeF,GAEjBG,EAAa,2BACbF,EAAKZ,MAAME,aAAaa,OAAO,EAC/BJ,EAAW,IAKXG,EAAa,yBACbF,EAAKZ,MAAME,aAAaQ,KAAKtB,GAC7BuB,KAGA,IAAMK,EAAWb,EAAcc,IAAI,SAAAC,GAAC,OAAIjB,EAAWiB,KAEnDN,EAAKO,SAAS,CACZtB,MAAOc,EACPV,WAAYe,EACZlB,UAAWe,EACXjB,QAASkB,6EAKJ,IAAAM,EAAAC,KACP,OACEvC,EAAAC,EAAAC,cAACsC,EAAD,KACExC,EAAAC,EAAAC,cAACuC,EAAD,CACA1B,MAAOwB,KAAKrB,MAAMH,MAClBC,UAAWuB,KAAKrB,MAAMF,UACtBF,QAASyB,KAAKrB,MAAMJ,UAGnByB,KAAKrB,MAAMC,WAAWgB,IAAI,SAAAO,GAAM,OAC/B1C,EAAAC,EAAAC,cAACyC,EAAD,CACEtC,gBAAiBiC,EAAKjC,gBACtBC,GAAIoC,EAAOpC,GACXsC,IAAKF,EAAOpC,GACZE,KAAMkC,EAAOlC,KACbE,MAAOgC,EAAOhC,kBAvERmC,oBCFlBC,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.bd139881.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./CharacterCard.css\";\n\nconst CharacterCard = props => (\n  <div className=\"card\" onClick={() => props.selectCharacter(props.id)}>\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default CharacterCard;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props =>(\n<h1 className=\"title\">{props.children}\n<p className=\"message\">{props.message}</p>\n<p className=\"card-text\">Score: {props.score} | High Score: {props.highScore}</p>\n\n</h1>);\n\n\nexport default Title;\n ","import React, { Component } from \"react\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport characters from \"./characters.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    characters,\n    message: \"\",\n    score: 0,\n    highScore: 0,\n    clickedArray: [],\n  };\n\n  selectCharacter = id => {\n    // const friends = this.state.friends.filter(friend => friend.id !== id);\n\n    \n    let newCharacters = [];\n    for (let i = 0; i < 12; i++) {\n      let index = Math.floor(Math.random() * 12);\n\n      while (newCharacters.includes(index)) {\n        index = Math.floor(Math.random() * 12);\n      }\n      newCharacters.push(index);\n  }\n\n  let newScore = this.state.score\n  let newHighScore = this.state.highScore\n  let newMessage = this.state.message\n\n  if(this.state.clickedArray.includes(id))\n  {\n    if (newScore>newHighScore)\n      newHighScore = newScore\n\n    newMessage = \"You guessed incorrectly!\"\n    this.state.clickedArray.length=0\n    newScore = 0\n  }\n\n  else\n  {\n    newMessage = \"You guessed correctly!\"\n    this.state.clickedArray.push(id)\n    newScore++\n  }\n    \n    const newOrder = newCharacters.map(x => characters[x])\n\n    this.setState({ \n      score: newScore,\n      characters: newOrder,\n      highScore: newHighScore,\n      message: newMessage\n     });\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title\n        score={this.state.score}\n        highScore={this.state.highScore}\n        message={this.state.message}\n        />\n        \n        {this.state.characters.map(friend => (\n          <CharacterCard\n            selectCharacter={this.selectCharacter}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}